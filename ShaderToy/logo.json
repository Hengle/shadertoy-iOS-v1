{
    "info": {
        "date": "1367053740",
        "description": "Logo in a texture for Shadertoy",
        "hasliked": 0,
        "id": "0427c640",
        "likes": 0,
        "name": "Shadertoy Logo",
        "published": 0,
        "tags": [
            "texturing","logo"
        ],
        "username": "Shadertoy",
        "viewed": 0,
        "removeoverlay": 0
    },
    "renderpass": [
        {
                   "code": "void main(void) { float texSizeH = min(iChannelResolution[0].x,iResolution.x * 0.75); vec2 texSize = vec2(texSizeH,texSizeH*iChannelResolution[0].y/iChannelResolution[0].x); vec2 bo = (iResolution.xy - texSize)/2.0; vec2 uv = (gl_FragCoord.xy - bo)/texSize.xy; vec3 col = vec3(0.2, 0.2, 0.2); vec2 p = (-1.0+2.0*gl_FragCoord.xy / iResolution.xy)*vec2(iResolution.x/iResolution.y,1.0);vec2 q = p + 0.1;q *= 1.0 + 0.3*q.x; float r = length(q);float a = atan(q.y,q.x) + 1.0*iGlobalTime;col = mix( col, vec3(0.1), (1.0-smoothstep( 0.0,0.24,abs(r-0.5)))*smoothstep(-1.0,1.0,sin(17.0*a)));p *= 1.0 + 0.3*p.x;r = length(p);a = atan(p.y,p.x) + 1.0*iGlobalTime;col = mix( col, vec3(1.0,1.0,1.0), (1.0-smoothstep( 0.10,0.14,abs(r-0.5)))*smoothstep(0.4,1.0,sin(17.0*a))   );float gl = 0.6 + 0.4*sin(0.5*6.2831*iGlobalTime);col += gl * vec3(1.0,0.5,0.2) * (1.0-smoothstep( 0.10,0.20,abs(r-0.5)))*smoothstep(-1.0,0.5,sin(17.0*a));if (uv.x > 0.0 && uv.x < 1.0 && uv.y > 0.0 && uv.y < 1.0) { vec4 tmp = texture2D(iChannel0, uv ).xyzw; col = mix(col, tmp.xyz, tmp.w); } gl_FragColor = vec4( col, 1.0 ); }",
            "description": "",
            "name": "main",
            "inputs": [
                       {
                       "channel": 0,
                       "ctype": "texture",
                       "id": 0,
                       "src": "loading.png"
                       }
            ],
            "outputs": []
        }
    ],
    "ver": "0.1"
}